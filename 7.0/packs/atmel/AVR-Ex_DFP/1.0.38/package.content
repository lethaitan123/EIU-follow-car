<?xml version='1.0' encoding='ASCII'?>
<package schemaVersion="1.0">
  <content>
    <resources target="AVR64EA28">
      <resource type="atdf" subdir="atdf">
        <includes pattern="AVR64EA28.atdf"/>
      </resource>
      <resource type="c.header" subdir="include">
        <includes pattern="avr/ioavr64ea28.h"/>
        <includes pattern="component-version.h"/>
      </resource>
      <resource type="c.source.exe.template" subdir="templates">
        <includes pattern="main.c"/>
      </resource>
      <resource type="c.source.lib.template" subdir="templates">
        <includes pattern="library.c"/>
      </resource>
      <resource type="cpp.source.exe.template" subdir="templates">
        <includes pattern="main.cpp"/>
      </resource>
      <resource type="cpp.source.lib.template" subdir="templates">
        <includes pattern="library.cpp"/>
      </resource>
      <resource type="gcc.spec" subdir="gcc">
        <includes pattern="dev/avr64ea28/device-specs/specs-avr64ea28"/>
        <meta key="mmcu-option" value="avr64ea28"/>
      </resource>
      <resource type="gcc.lib" subdir="gcc">
        <includes pattern="dev/avr64ea28/avrxmega2/libavr64ea28.a"/>
      </resource>
      <resource type="gcc.startup.obj" subdir="gcc">
        <includes pattern="dev/avr64ea28/avrxmega2/crtavr64ea28.o"/>
      </resource>
      <resource type="xc8.spec" subdir="xc8">
        <includes pattern="avr/device-specs/specs-avr64ea28"/>
        <meta key="mmcu-option" value="avr64ea28"/>
      </resource>
      <resource type="xc8.lib" subdir="xc8">
        <includes pattern="avr/lib/avrxmega2/libavr64ea28.a"/>
      </resource>
      <resource type="xc8.startup.obj" subdir="xc8">
        <includes pattern="avr/lib/avrxmega2/crtavr64ea28.o"/>
      </resource>
      <resource type="xc8.memxconst.startup.obj" subdir="xc8">
        <includes pattern="avr/lib/avrxmega2/memx-const/crtavr64ea28.o"/>
      </resource>
      <resource type="xc8.memxconst.mapped.startup.obj" subdir="xc8">
        <includes pattern="avr/lib/avrxmega2/memx-const/mapped/crtavr64ea28.o"/>
      </resource>
      <resource type="xc8.memxconst.lib" subdir="xc8">
        <includes pattern="avr/lib/avrxmega2/memx-const/libavr64ea28.a"/>
      </resource>
      <resource type="xc8.memxconst.mapped.lib" subdir="xc8">
        <includes pattern="avr/lib/avrxmega2/memx-const/mapped/libavr64ea28.a"/>
      </resource>
      <resource type="xc8.c.header" subdir="xc8">
        <includes pattern="avr/include/avr/ioavr64ea28.h"/>
      </resource>
      <resource type="xc8.cfgdata" subdir="xc8">
        <includes pattern="avr/cfgdata/avr64ea28.cfgdata"/>
      </resource>
      <resource type="xc8.chipinfo" subdir="xc8">
        <includes pattern="avr/chipinfo/avr64ea28.html"/>
      </resource>
      <resource type="avrasm.header" subdir="avrasm/inc">
        <includes pattern="AVR64EA28def.inc"/>
      </resource>
      <resource type="avrasm.source.template" subdir="avrasm/templates">
        <includes pattern="main.asm"/>
      </resource>
    </resources>
    <resources target="AVR64EA32">
      <resource type="atdf" subdir="atdf">
        <includes pattern="AVR64EA32.atdf"/>
      </resource>
      <resource type="c.header" subdir="include">
        <includes pattern="avr/ioavr64ea32.h"/>
        <includes pattern="component-version.h"/>
      </resource>
      <resource type="c.source.exe.template" subdir="templates">
        <includes pattern="main.c"/>
      </resource>
      <resource type="c.source.lib.template" subdir="templates">
        <includes pattern="library.c"/>
      </resource>
      <resource type="cpp.source.exe.template" subdir="templates">
        <includes pattern="main.cpp"/>
      </resource>
      <resource type="cpp.source.lib.template" subdir="templates">
        <includes pattern="library.cpp"/>
      </resource>
      <resource type="gcc.spec" subdir="gcc">
        <includes pattern="dev/avr64ea32/device-specs/specs-avr64ea32"/>
        <meta key="mmcu-option" value="avr64ea32"/>
      </resource>
      <resource type="gcc.lib" subdir="gcc">
        <includes pattern="dev/avr64ea32/avrxmega2/libavr64ea32.a"/>
      </resource>
      <resource type="gcc.startup.obj" subdir="gcc">
        <includes pattern="dev/avr64ea32/avrxmega2/crtavr64ea32.o"/>
      </resource>
      <resource type="xc8.spec" subdir="xc8">
        <includes pattern="avr/device-specs/specs-avr64ea32"/>
        <meta key="mmcu-option" value="avr64ea32"/>
      </resource>
      <resource type="xc8.lib" subdir="xc8">
        <includes pattern="avr/lib/avrxmega2/libavr64ea32.a"/>
      </resource>
      <resource type="xc8.startup.obj" subdir="xc8">
        <includes pattern="avr/lib/avrxmega2/crtavr64ea32.o"/>
      </resource>
      <resource type="xc8.memxconst.startup.obj" subdir="xc8">
        <includes pattern="avr/lib/avrxmega2/memx-const/crtavr64ea32.o"/>
      </resource>
      <resource type="xc8.memxconst.mapped.startup.obj" subdir="xc8">
        <includes pattern="avr/lib/avrxmega2/memx-const/mapped/crtavr64ea32.o"/>
      </resource>
      <resource type="xc8.memxconst.lib" subdir="xc8">
        <includes pattern="avr/lib/avrxmega2/memx-const/libavr64ea32.a"/>
      </resource>
      <resource type="xc8.memxconst.mapped.lib" subdir="xc8">
        <includes pattern="avr/lib/avrxmega2/memx-const/mapped/libavr64ea32.a"/>
      </resource>
      <resource type="xc8.c.header" subdir="xc8">
        <includes pattern="avr/include/avr/ioavr64ea32.h"/>
      </resource>
      <resource type="xc8.cfgdata" subdir="xc8">
        <includes pattern="avr/cfgdata/avr64ea32.cfgdata"/>
      </resource>
      <resource type="xc8.chipinfo" subdir="xc8">
        <includes pattern="avr/chipinfo/avr64ea32.html"/>
      </resource>
      <resource type="avrasm.header" subdir="avrasm/inc">
        <includes pattern="AVR64EA32def.inc"/>
      </resource>
      <resource type="avrasm.source.template" subdir="avrasm/templates">
        <includes pattern="main.asm"/>
      </resource>
    </resources>
    <resources target="AVR64EA48">
      <resource type="atdf" subdir="atdf">
        <includes pattern="AVR64EA48.atdf"/>
      </resource>
      <resource type="c.header" subdir="include">
        <includes pattern="avr/ioavr64ea48.h"/>
        <includes pattern="component-version.h"/>
      </resource>
      <resource type="c.source.exe.template" subdir="templates">
        <includes pattern="main.c"/>
      </resource>
      <resource type="c.source.lib.template" subdir="templates">
        <includes pattern="library.c"/>
      </resource>
      <resource type="cpp.source.exe.template" subdir="templates">
        <includes pattern="main.cpp"/>
      </resource>
      <resource type="cpp.source.lib.template" subdir="templates">
        <includes pattern="library.cpp"/>
      </resource>
      <resource type="gcc.spec" subdir="gcc">
        <includes pattern="dev/avr64ea48/device-specs/specs-avr64ea48"/>
        <meta key="mmcu-option" value="avr64ea48"/>
      </resource>
      <resource type="gcc.lib" subdir="gcc">
        <includes pattern="dev/avr64ea48/avrxmega2/libavr64ea48.a"/>
      </resource>
      <resource type="gcc.startup.obj" subdir="gcc">
        <includes pattern="dev/avr64ea48/avrxmega2/crtavr64ea48.o"/>
      </resource>
      <resource type="xc8.spec" subdir="xc8">
        <includes pattern="avr/device-specs/specs-avr64ea48"/>
        <meta key="mmcu-option" value="avr64ea48"/>
      </resource>
      <resource type="xc8.lib" subdir="xc8">
        <includes pattern="avr/lib/avrxmega2/libavr64ea48.a"/>
      </resource>
      <resource type="xc8.startup.obj" subdir="xc8">
        <includes pattern="avr/lib/avrxmega2/crtavr64ea48.o"/>
      </resource>
      <resource type="xc8.memxconst.startup.obj" subdir="xc8">
        <includes pattern="avr/lib/avrxmega2/memx-const/crtavr64ea48.o"/>
      </resource>
      <resource type="xc8.memxconst.mapped.startup.obj" subdir="xc8">
        <includes pattern="avr/lib/avrxmega2/memx-const/mapped/crtavr64ea48.o"/>
      </resource>
      <resource type="xc8.memxconst.lib" subdir="xc8">
        <includes pattern="avr/lib/avrxmega2/memx-const/libavr64ea48.a"/>
      </resource>
      <resource type="xc8.memxconst.mapped.lib" subdir="xc8">
        <includes pattern="avr/lib/avrxmega2/memx-const/mapped/libavr64ea48.a"/>
      </resource>
      <resource type="xc8.c.header" subdir="xc8">
        <includes pattern="avr/include/avr/ioavr64ea48.h"/>
      </resource>
      <resource type="xc8.cfgdata" subdir="xc8">
        <includes pattern="avr/cfgdata/avr64ea48.cfgdata"/>
      </resource>
      <resource type="xc8.chipinfo" subdir="xc8">
        <includes pattern="avr/chipinfo/avr64ea48.html"/>
      </resource>
      <resource type="avrasm.header" subdir="avrasm/inc">
        <includes pattern="AVR64EA48def.inc"/>
      </resource>
      <resource type="avrasm.source.template" subdir="avrasm/templates">
        <includes pattern="main.asm"/>
      </resource>
    </resources>
  </content>
  <pdsc xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" vendor="Atmel" compliant="false">
    <releases>
      <release version="1.0.BUILDNUMBER">Initial release.</release>
    </releases>
  </pdsc>
</package>
